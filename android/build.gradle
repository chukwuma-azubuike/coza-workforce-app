// Top-level build file where you can add configuration options common to all sub-projects/modules.
import groovy.json.JsonSlurper

buildscript {
    ext {
        buildToolsVersion = "29.0.3"
        minSdkVersion = 21
        compileSdkVersion = 33
        targetSdkVersion = 33
        ndkVersion = "21.1.6352462"       
        googlePlayServicesVersion      = "17.0.0"
    }
    repositories {
        google()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("com.android.tools.build:gradle:4.1.0")
        classpath "com.google.gms:google-services:4.3.15"
        classpath("com.facebook.react:react-native-gradle-plugin")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        mavenLocal()
        maven {
            // All of React Native (JS, Obj-C sources, Android binaries) is installed from npm
            url("$rootDir/../node_modules/react-native/android")
        }
        maven {
            // Android JSC is installed from npm
            url("$rootDir/../node_modules/jsc-android/dist")
        }

        mavenCentral()
        jcenter()
        maven { url 'https://www.jitpack.io' }
        
//        exclusiveContent {
//           // We get React Native's Android binaries exclusively through npm,
//           // from a local Maven repo inside node_modules/react-native/.
//           // (The use of exclusiveContent prevents looking elsewhere like Maven Central
//           // and potentially getting a wrong version.)
//           filter {
//               includeGroup "com.facebook.react"
//           }
//           forRepository {
//               maven {
//                   url "$rootDir/../node_modules/react-native/android"
//               }
//           }
//       }
    }
}


def getNodePackageVersion() {
    def packageFile = new File("$rootDir/../package.json")
    def packageJson = new JsonSlurper().parseText(packageFile.text)
    return packageJson["version"]
}


def getNodePackageVersionCode() {
    def packageFile = new File("$rootDir/../package.json")
    def packageJson = new JsonSlurper().parseText(packageFile.text)
    return packageJson["versionCode"]
}

subprojects {
    ext {
        nodePackageVersion = getNodePackageVersion()
        nodePackageVersionCode = getNodePackageVersionCode()
    }
}